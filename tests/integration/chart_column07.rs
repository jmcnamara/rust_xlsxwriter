// Test case that compares a file generated by rust_xlsxwriter with a file
// created by Excel.
//
// SPDX-License-Identifier: MIT OR Apache-2.0
//
// Copyright 2022-2025, John McNamara, jmcnamara@cpan.org

use crate::common;
use rust_xlsxwriter::{Chart, ChartType, Workbook, XlsxError};

// Create a rust_xlsxwriter file to compare against an Excel file.
fn create_new_xlsx_file(filename: &str) -> Result<(), XlsxError> {
    let mut workbook = Workbook::new();

    let worksheet = workbook.add_worksheet();

    // Add some test data for the chart(s).
    let data = [[1, 2, 3], [2, 4, 6], [3, 6, 9], [4, 8, 12], [5, 10, 15]];
    worksheet.write_row_matrix(0, 0, data)?;

    let mut chart = Chart::new(ChartType::Column);
    chart.set_axis_ids(68810240, 68811776);

    chart
        .add_series()
        .set_values("=(Sheet1!$A$1:$A$2,Sheet1!$A$4:$A$5)");

    worksheet.insert_chart(8, 4, &chart)?;

    workbook.save(filename)?;

    Ok(())
}

#[test]
fn test_chart_column07() {
    let test_runner = common::TestRunner::new()
        .set_name("chart_column07")
        .set_function(create_new_xlsx_file)
        // Ignore the num cache, which we can't parse for non-contiguous ranges.
        .ignore_elements("xl/charts/chart1.xml", "numCache|formatCode|c:pt|<c:v>")
        .initialize();

    test_runner.assert_eq();
    test_runner.cleanup();
}
